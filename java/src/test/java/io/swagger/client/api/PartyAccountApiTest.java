/*
 * Account Management
 * This is Swagger UI environment generated for the TMF Account Management specification
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.PartyAccount;
import io.swagger.client.model.PartyAccountCreate;
import io.swagger.client.model.PartyAccountUpdate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PartyAccountApi
 */
@Ignore
public class PartyAccountApiTest {

    private final PartyAccountApi api = new PartyAccountApi();

    
    /**
     * Creates a PartyAccount
     *
     * This operation creates a PartyAccount entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPartyAccountTest() throws ApiException {
        PartyAccountCreate partyAccount = null;
        PartyAccount response = api.createPartyAccount(partyAccount);

        // TODO: test validations
    }
    
    /**
     * Deletes a PartyAccount
     *
     * This operation deletes a PartyAccount entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePartyAccountTest() throws ApiException {
        String id = null;
        api.deletePartyAccount(id);

        // TODO: test validations
    }
    
    /**
     * List or find PartyAccount objects
     *
     * This operation list or find PartyAccount entities
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listPartyAccountTest() throws ApiException {
        String fields = null;
        Integer offset = null;
        Integer limit = null;
        List<PartyAccount> response = api.listPartyAccount(fields, offset, limit);

        // TODO: test validations
    }
    
    /**
     * Updates partially a PartyAccount
     *
     * This operation updates partially a PartyAccount entity.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchPartyAccountTest() throws ApiException {
        String id = null;
        PartyAccountUpdate partyAccount = null;
        PartyAccount response = api.patchPartyAccount(id, partyAccount);

        // TODO: test validations
    }
    
    /**
     * Retrieves a PartyAccount by ID
     *
     * This operation retrieves a PartyAccount entity. Attribute selection is enabled for all first level attributes.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrievePartyAccountTest() throws ApiException {
        String id = null;
        String fields = null;
        PartyAccount response = api.retrievePartyAccount(id, fields);

        // TODO: test validations
    }
    
}
